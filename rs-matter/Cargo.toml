[package]
name = "rs-matter"
version = "0.1.1"
edition = "2021"
authors = ["Kedar Sovani <kedars@gmail.com>", "Ivan Markov", "Project CHIP Authors"]
description = "Native Rust implementation of the Matter (Smart-Home) ecosystem"
repository = "https://github.com/project-chip/matter-rs"
readme = "README.md"
keywords = ["matter", "smart", "smart-home", "IoT", "ESP32"]
categories = ["embedded", "network-programming"]
license = "Apache-2.0"
rust-version = "1.83"

[features]
default = ["os", "log", "mbedtls"]
os = ["std", "backtrace", "critical-section/std", "embassy-sync/std", "embassy-time/std"]
std = ["alloc", "rand"]
backtrace = []
alloc = ["defmt?/alloc"]
openssl = ["alloc", "dep:openssl", "foreign-types"]
mbedtls = ["alloc", "dep:mbedtls"]
defmt = ["dep:defmt", "heapless/defmt-03", "embassy-time/defmt"]
log = ["dep:log", "embassy-time/log"]
large-buffers = [] # TCP support

[dependencies]
rs-matter-macros = { version = "0.1", path = "../rs-matter-macros" }
bitflags = { version =  "2.5", default-features = false }
byteorder = { version = "1.5", default-features = false }
heapless = "0.8"
num = { version = "0.4", default-features = false }
num-derive = "0.4"
num-traits = { version = "0.2", default-features = false }
strum = { version = "0.26", features = ["derive"], default-features = false }
log = { version = "0.4", optional = true }
defmt = { version = "0.3", optional = true, features = ["ip_in_core"] }
subtle = { version = "2.5", default-features = false }
safemem = { version = "0.3", default-features = false }
owo-colors = "4"
time = { version = "0.3", default-features = false }
verhoeff = { version = "1", default-features = false }
embassy-futures = "0.1"
embassy-time = "0.4"
embassy-time-queue-utils = "0.1"
embassy-sync = "0.7"
critical-section = "1.1"
domain = { version = "0.10", default-features = false, features = ["heapless"] }
portable-atomic = "1"
qrcodegen-no-heap = "1.8"
scopeguard = { version = "1", default-features = false }
pinned-init = { version = "0.0.8", default-features = false }

# crypto
openssl = { version = "0.10", optional = true }
foreign-types = { version = "0.3", optional = true }
mbedtls = { package = "esp-mbedtls-sys", git = "https://github.com/esp-rs/esp-mbedtls", optional = true }

# rust-crypto
sha2 = { version = "0.10", default-features = false }
hmac = "0.12"
pbkdf2 = "0.12"
hkdf = "0.12"
aes = "0.8"
ccm = { version = "0.5", default-features = false, features = ["alloc"] }
p256 = { version = "0.13", default-features = false, features = ["arithmetic", "ecdh", "ecdsa"] }
sec1 = { version = "0.7", default-features = false }
elliptic-curve = "0.13"
crypto-bigint = { version = "0.5", default-features = false }
rand_core = { version = "0.6", default-features = false }
x509-cert = { version = "0.2", default-features = false, features = ["pem"] } # TODO: requires `alloc`

# STD
rand = { version = "0.8", optional = true, default-features = false, features = ["std", "std_rng"] }
async-io = { version = "2", optional = true, default-features = false }
async-compat = { version = "0.2", optional = true, default-features = false }

[target.'cfg(all(unix, not(target_os = "espidf")))'.dependencies]
bitflags = "2"
nix = { version = "0.27", features = ["net"] }

[target.'cfg(target_os = "macos")'.dependencies]
astro-dnssd = { version = "0.3" }

[target.'cfg(target_os = "linux")'.dependencies]
zeroconf = { version = "0.12", optional = true }
bluer = { version = "0.17", features = ["bluetoothd"] }
tokio = { version = "1" }
tokio-stream = { version = "0.1" }

[dev-dependencies]
log = "0.4"
env_logger = "0.11"
nix = { version = "0.27", features = ["net"] }
futures-lite = "2"
async-channel = "2"
static_cell = "2"
similar = "2.6"
embassy-time-queue-utils = { version = "0.1", features = ["generic-queue-64"] }
trybuild = "1"
